# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class EmbeddingConfigType(str, enum.Enum):
    """
    An enumeration.
    """

    OPENAI_EMBEDDING = "OPENAI_EMBEDDING"
    AZURE_EMBEDDING = "AZURE_EMBEDDING"
    BEDROCK_EMBEDDING = "BEDROCK_EMBEDDING"
    COHERE_EMBEDDING = "COHERE_EMBEDDING"
    GEMINI_EMBEDDING = "GEMINI_EMBEDDING"
    HUGGINGFACE_API_EMBEDDING = "HUGGINGFACE_API_EMBEDDING"

    def visit(
        self,
        openai_embedding: typing.Callable[[], T_Result],
        azure_embedding: typing.Callable[[], T_Result],
        bedrock_embedding: typing.Callable[[], T_Result],
        cohere_embedding: typing.Callable[[], T_Result],
        gemini_embedding: typing.Callable[[], T_Result],
        huggingface_api_embedding: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is EmbeddingConfigType.OPENAI_EMBEDDING:
            return openai_embedding()
        if self is EmbeddingConfigType.AZURE_EMBEDDING:
            return azure_embedding()
        if self is EmbeddingConfigType.BEDROCK_EMBEDDING:
            return bedrock_embedding()
        if self is EmbeddingConfigType.COHERE_EMBEDDING:
            return cohere_embedding()
        if self is EmbeddingConfigType.GEMINI_EMBEDDING:
            return gemini_embedding()
        if self is EmbeddingConfigType.HUGGINGFACE_API_EMBEDDING:
            return huggingface_api_embedding()
